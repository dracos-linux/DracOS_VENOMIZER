import os
from color import *
import Logo

#
def Exploit():
    os.system("clear")
    Logo.logo_9()
    print(
        G(
            """
    1.  Armitage    
    2.  Backdoor-Factory
    3.  BeEF
    4.  Cisco-Auditing-Tool
    5.  Cisco-global-exploiter
    6.  Cisco-OCS
    7.  Cisco-torch
    8.  Commix
    9.  Crackle
    10. Exploit-DB
    11. Jboss-autopwn
    12. Linux-exploit-suggester
    13. Maltego-teeth
    14. Metasploit
    15. Msf-pattern-create
    16. RouterSploit
    17. SET
    18. Shellnoob
    19. sqlmap
    20. THC-IPV6
    21. Yersinia
    0.  back """
        )
    )
    print(R("    00. exit"))
    menu = input(G("[") + R("DracOS") + G("]select>"))
    if menu == "1":
        # Call function
        armitage()
    elif menu == "2":
        # Call function
        backdoor_factory()
    elif menu == "3":
        # Call function
        beef()
    elif menu == "4":
        # Call function
        cisco_auditing_tool()
    elif menu == "5":
        # Call function
        cisco_global_exploiter()
    elif menu == "6":
        # Call function
        cisco_ocs()
    elif menu == "7":
        # Call function
        cisco_torch()
    elif menu == "8":
        # Call function
        commix()
    elif menu == "9":
        # Call function
        crackle()
    elif menu == "10":
        # Call function
        exploit_db()
    elif menu == "11":
        # Call function
        jboss_autopwn()
    elif menu == "12":
        # Call function
        linux_exploit_suggester()
    elif menu == "13":
        # Call function
        maltego_teeth()
    elif menu == "14":
        # Call function
        metasploit()
    elif menu == "15":
        # Call function
        msf_pattern_create()
    elif menu == "16":
        # Call function
        router_sploit()
    elif menu == "17":
        # Call function
        set()
    elif menu == "18":
        # Call function
        shellnoob()
    elif menu == "19":
        # Call function
        sqlmap()
    elif menu == "20":
        # Call function
        thc_ipv6()
    elif menu == "21":
        # Call function
        yersinia()
    elif menu == "0":
        os.system("python3 $HOME/git/DracOS_VENOMIZER/venomizer.py")  # /usr/bin/
    elif menu == "00":
        exit()


# Add function
# Armitage
def armitage():
    if os.path.isfile("/usr/bin/armitage"):
        os.system("clear")
        print(B("Tools Available"))
        input()
    else:
        os.system(
            'xterm -T "☣ INSTALL Armitage ☣" -geometry 100x30 -e "sudo apt install armitage"'
        )
        os.system("clear")
        print(B("Armitage Already Installed"))
        input()
    # end Armitage

# Backdoor-Factory
def backdoor_factory():
    if os.path.isfile("/usr/bin/backdoor-factory"):
        os.system("clear")
        print(B("Tools Available"))
        input()
    else:
        os.system(
            'xterm -T "☣ INSTALL Backdoor-Factory ☣" -geometry 100x30 -e "sudo apt install backdoor-factory"'
        )
        os.system("clear")
        print(B("Backdoor-Factory Already Installed"))
        input()
    # end Backdoor-Factory

# BeEF
def beef():
    if os.path.isfile("/usr/bin/beef"):
        os.system("clear")
        print(B("Tools Available"))
        input()
    else:
        os.system(
            'xterm -T "☣ INSTALL BeEF ☣" -geometry 100x30 -e "sudo apt install beef-xss"'
        )
        os.system("clear")
        print(B("BeEF Already Installed"))
        input()
    # end BeEF

# Cisco-Auditing-Tool
def cisco_auditing_tool():
    if os.path.isfile("/usr/bin/cisco-auditing-tool"):
        os.system("clear")
        print(B("Tools Available"))
        input()
    else:
        os.system(
            'xterm -T "☣ INSTALL Cisco-Auditing-Tool ☣" -geometry 100x30 -e "sudo apt install cisco-auditing-tool"'
        )
        os.system("clear")
        print(B("Cisco-Auditing-Tool Already Installed"))
        input()
    # end Cisco-Auditing-Tool

# Cisco-global-exploiter
def cisco_global_exploiter():
    if os.path.isfile("/usr/bin/cisco-global-exploiter"):
        os.system("clear")
        print(B("Tools Available"))
        input()
    else:
        os.system(
            'xterm -T "☣ INSTALL Cisco-global-exploiter ☣" -geometry 100x30 -e "sudo apt install cisco-global-exploiter"'
        )
        os.system("clear")
        print(B("Cisco-global-exploiter Already Installed"))
        input()
    # end Cisco-global-exploiter


# Cisco-OCS
def cisco_ocs():
    if os.path.isfile("/usr/bin/cisco-ocs"):
        os.system("clear")
        print(B("Tools Available"))
        input()
    else:
        os.system(
            'xterm -T "☣ INSTALL Cisco-OCS ☣" -geometry 100x30 -e "sudo apt install cisco-ocs"'
        )
        os.system("clear")
        print(B("Cisco-OCS Already Installed"))
        input()
    # end Cisco-OCS

# Cisco-torch
def cisco_torch():
    if os.path.isfile("/usr/bin/cisco-torch"):
        os.system("clear")
        print(B("Tools Available"))
        input()
    else:
        os.system(
            'xterm -T "☣ INSTALL Cisco-torch ☣" -geometry 100x30 -e "sudo apt install cisco-torch"'
        )
        os.system("clear")
        print(B("Cisco-torch Already Installed"))
        input()
    # end Cisco-torch

# Commix
def commix():
    if os.path.isfile("/usr/bin/commix"):
        os.system("clear")
        print(B("Tools Available"))
        input()
    else:
        os.system(
            'xterm -T "☣ INSTALL Commix ☣" -geometry 100x30 -e "sudo apt install commix"'
        )
        os.system("clear")
        print(B("Commix Already Installed"))
        input()
    # end Commix

# Crackle
def crackle():
    if os.path.isfile("/usr/bin/crackle"):
        os.system("clear")
        print(B("Tools Available"))
        input()
    else:
        os.system(
            'xterm -T "☣ INSTALL Crackle ☣" -geometry 100x30 -e "sudo apt install crackle"'
        )
        os.system("clear")
        print(B("Crackle Already Installed"))
        input()
    # end Crackle

# Exploit-DB
def exploit_db():
    if os.path.isfile("/usr/bin/exploit-db"):
        os.system("clear")
        print(B("Tools Available"))
        input()
    else:
        os.system(
            'xterm -T "☣ INSTALL Exploit-DB ☣" -geometry 100x30 -e "sudo apt install exploitdb"'
        )
        os.system("clear")
        print(B("Exploit-DB Already Installed"))
        input()
    # end Exploit-DB

# Jboss-autopwn
def jboss_autopwn():
    if os.path.isfile("/usr/bin/jboss-autopwn"):
        os.system("clear")
        print(B("Tools Available"))
        input()
    else:
        os.system(
            'xterm -T "☣ INSTALL Jboss-autopwn ☣" -geometry 100x30 -e "sudo apt install jboss-autopwn"'
        )
        os.system("clear")
        print(B("Jboss-autopwn Already Installed"))
        input()
    # end Jboss-autopwn

# Linux-exploit-suggester
def linux_exploit_suggester():
    if os.path.isfile("/usr/bin/linux-exploit-suggester"):
        os.system("clear")
        print(B("Tools Available"))
        input()
    else:
        os.system(
            'xterm -T "☣ INSTALL Linux-exploit-suggester ☣" -geometry 100x30 -e "sudo apt install linux-exploit-suggester"'
        )
        os.system("clear")
        print(B("Linux-exploit-suggester Already Installed"))
        input()
    # end Linux-exploit-suggester

# Maltego-teeth
def maltego_teeth():
    if os.path.isfile("/usr/bin/maltego-teeth"):
        os.system("clear")
        print(B("Tools Available"))
        input()
    else:
        os.system(
            'xterm -T "☣ INSTALL Maltego-teeth ☣" -geometry 100x30 -e "sudo apt install maltego-teeth"'
        )
        os.system("clear")
        print(B("Maltego-teeth Already Installed"))
        input()
    # end Maltego-teeth

# Metasploit
def metasploit():
    if os.path.isfile("/usr/bin/msfconsole"):
        os.system("clear")
        print(B("Tools Available"))
        input()
    else:
        os.system(
            'xterm -T "☣ INSTALL Metasploit ☣" -geometry 100x30 -e "sudo apt install metasploit"'
        )
        os.system("clear")
        print(B("Metasploit Already Installed"))
        input()
    # end Metasploit

# Msf-pattern-create
def msf_pattern_create():
    if os.path.isfile("/usr/bin/msf-pattern-create"):
        os.system("clear")
        print(B("Tools Available"))
        input()
    else:
        os.system(
            'xterm -T "☣ INSTALL Msf-pattern-create ☣" -geometry 100x30 -e "sudo apt install msf-pattern-create"'
        )
        os.system("clear")
        print(B("Msf-pattern-create Already Installed"))
        input()
    # end Msf-pattern-create

# RouterSploit
def router_sploit():
    if os.path.isfile("/usr/bin/routersploit"):
        os.system("clear")
        print(B("Tools Available"))
        input()
    else:
        os.system(
            'xterm -T "☣ INSTALL RouterSploit ☣" -geometry 100x30 -e "sudo apt install routersploit"'
        )
        os.system("clear")
        print(B("RouterSploit Already Installed"))
        input()
    # end RouterSploit

# SET
def set():
    if os.path.isfile("/usr/bin/set"):
        os.system("clear")
        print(B("Tools Available"))
        input()
    else:
        os.system(
            'xterm -T "☣ INSTALL SET ☣" -geometry 100x30 -e "sudo apt install set"'
        )
        os.system("clear")
        print(B("SET Already Installed"))
        input()
    # end SET

# Shellnoob
def shellnoob():
    if os.path.isfile("/usr/bin/shellnoob"):
        os.system("clear")
        print(B("Tools Available"))
        input()
    else:
        os.system(
            'xterm -T "☣ INSTALL Shellnoob ☣" -geometry 100x30 -e "sudo apt install shellnoob"'
        )
        os.system("clear")
        print(B("Shellnoob Already Installed"))
        input()
    # end Shellnoob

# sqlmap
def sqlmap():
    if os.path.isfile("/usr/bin/sqlmap"):
        os.system("clear")
        print(B("Tools Available"))
        input()
    else:
        os.system(
            'xterm -T "☣ INSTALL sqlmap ☣" -geometry 100x30 -e "sudo apt install sqlmap"'
        )
        os.system("clear")
        print(B("sqlmap Already Installed"))
        input()
    # end sqlmap

# THC-IPV6
def thc_ipv6():
    if os.path.isfile("/usr/bin/thc-ipv6"):
        os.system("clear")
        print(B("Tools Available"))
        input()
    else:
        os.system(
            'xterm -T "☣ INSTALL THC-IPV6 ☣" -geometry 100x30 -e "sudo apt install thc-ipv6"'
        )
        os.system("clear")
        print(B("THC-IPV6 Already Installed"))
        input()
    # end THC-IPV6

# Yersinia
def yersinia():
    if os.path.isfile("/usr/bin/yersinia"):
        os.system("clear")
        print(B("Tools Available"))
        input()
    else:
        os.system(
            'xterm -T "☣ INSTALL Yersinia ☣" -geometry 100x30 -e "sudo apt install yersinia"'
        )
        os.system("clear")
        print(B("Yersinia Already Installed"))
        input()
    # end Yersinia

    # Looping


while True:
    Exploit()
